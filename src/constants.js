const { ENABLE_CANADA_POST_CARRIER } = require('./config')
const KEEP_ALIVE_INTERVAL = 300000 // 5 minutes in milliseconds

const BACKOFF = 600000 // retry exponential backoff rate in milliseconds
const ORDER_UPDATE_BACKOFF = 7200000 // retry exponential backoff rate in milliseconds (only for fraud hold updates to jesta)

const DEFAULT_STALE_ORDER_CUTOFF_TIME_MS = 10 * 60 * 1000

let JOB_TASK_TIMEOUT = 2 * 60 * 1000
const jobTaskTimeoutFromEnv = Number(process.env.JOB_TASK_TIMEOUT)
if (jobTaskTimeoutFromEnv) {
  if (jobTaskTimeoutFromEnv > 0 && jobTaskTimeoutFromEnv < 10 * 60 * 1000) {
    JOB_TASK_TIMEOUT = jobTaskTimeoutFromEnv
  } else {
    throw new Error(`Invalid JOB_TASK_TIMEOUT passed as environmental variable: ${jobTaskTimeoutFromEnv}`)
  }
}
console.log('JOB_TASK_TIMEOUT set to: ', JOB_TASK_TIMEOUT)

let MAXIMUM_RETRIES = 3
let maximumRetriesFromEnv = Number(process.env.MAXIMUM_RETRIES)
if (maximumRetriesFromEnv) {
  if (maximumRetriesFromEnv > 0 && maximumRetriesFromEnv < 10) {
    MAXIMUM_RETRIES = maximumRetriesFromEnv
  } else {
    throw new Error(`Invalid MAXIMUM_RETRIES passed as environmental variable: ${maximumRetriesFromEnv}`)
  }
}
console.log('MAXIMUM_RETRIES set to: ', MAXIMUM_RETRIES)

const LOCALES_TO_JESTA_LANGUAGE_NUMBERS = {
  'en-CA': 1,
  'fr-CA': 3
}

const JESTA_TAX_DESCRIPTIONS = {
  GST: 'GST CANADA',
  PST_BC: 'PST-BC',
  PST_SK: 'PST-SK',
  PST_MB: 'PST-MB',
  HST_ON: 'HST-ON',
  QST_QC: 'QST-QC',
  HST_NB: 'HST-NB',
  HST_NL: 'HST-NFL',
  HST_NS: 'HST-NS',
  HST_PE: 'HST-PEI'
}

const CARD_TYPES_TO_JESTA_CODES = {
  'apple pay - visa': '05',
  'apple pay - mastercard': '06',
  'apple pay - american express': '07',
  'apple pay - amex': '07',
  'visa': '05',
  'google pay - visa': '05',
  'google pay - mastercard': '06',
  'google pay - amex': '07',
  'mastercard': '06',
  'american-express': '07',
  'american express': '07',
  'diners-club': '09',
  'discover': '08',
  'jcb': '10',
  'harry rosen giftcard': '14',
  'harry rosen loyalty': '49',
  'paypal': '80',
  'klarna': '93',
  'klarna payments': '93',
  'amex': '07'
}

const CITCON_PAYMENT_METHODS = {
  'upop': '45',
  'others': '55'
}

const ONLINE_SITE_ID = '00990'

const ORDER_CUSTOM_FIELDS = {
  SENT_TO_OMS_STATUS: 'sentToOmsStatus',
  SENT_TO_CJ_STATUS: 'sentToCjStatus',
  OMS_UPDATE_RETRY_COUNT: 'omsUpdateRetryCount',
  OMS_UPDATE_NEXT_RETRY_AT: 'omsUpdateNextRetryAt',
  OMS_UPDATE_STATUS: 'omsUpdate',
  RETRY_COUNT: 'retryCount',
  NEXT_RETRY_AT: 'nextRetryAt',
  ALGOLIA_CONVERSION_NEXT_RETRY_AT: 'algoliaConversionNextRetryAt',
  ALGOLIA_CONVERSION_RETRY_COUNT: 'algoliaConversionRetryCount',
  ALGOLIA_CONVERSION_STATUS: 'sentToAlgoliaStatus',
  DYNAMIC_YIELD_PURCHASE_STATUS: 'sentToDynamicYieldStatus',
  CJ_CONVERSION_NEXT_RETRY_AT: 'cjNextRetryAt',
  CJ_CONVERSION_RETRY_COUNT: 'cjRetryCount',
  CJ_CONVERSION_STATUS: 'sentToCjStatus',
  CJ_EVENT: 'cjEvent',
  NARVAR_LAST_SUCCESS_TIME: 'narvarLastSuccessTime',
  NARVAR_STATUS: 'narvarStatus',
  NARVAR_MONIKER: 'narvarMoniker',
  NARVAR_RETRY_COUNT: 'narvarRetryCount',
  NARVAR_NEXT_RETRY_AT: 'narvarNextRetryAt',
  CART_SOURCE_WEBSITE: 'cartSourceWebsite',
  SEGMENT_STATUS: 'segmentStatus',
  SEGMENT_RETRY_COUNT: 'segmentRetryCount',
  SEGMENT_NEXT_RETRY_AT: 'segmentNextRetryAt',
  SEGMENT_ORDER_STATE: 'segmentOrderState',
  LR_USER_ID: 'loginRadiusUid',
  BOLD_LAST_SUCCESS_TIME: 'boldLastSuccessTime',
  BOLD_STATUS: 'boldStatus',
  BOLD_RETRY_COUNT: 'boldRetryCount',
  BOLD_NEXT_RETRY_AT: 'boldNextRetryAt',
  IS_NARVAR_PROMISE_CONFIRMED: 'isNarvarPromiseConfirmed'
}

const HEADER_ROWS_ENUM = {
  RECORD_TYPE: 'RecordType H',
  SITE_ID: 'SITE_ID',
  WFE_TRANS_ID: 'WFE_TRANS_ID',
  SHIP_TO_FIRST_NAME: 'SHIP_TO_FIRST_NAME',
  SHIP_TO_LAST_NAME: 'SHIP_TO_LAST_NAME',
  SHIP_TO_ADDRESS_1: 'SHIP_TO_ADDRESS_1',
  SHIP_TO_ADDRESS_2: 'SHIP_TO_ADDRESS_2',
  SHIP_TO_ADDRESS_3: 'SHIP_TO_ADDRESS_3',
  SHIP_TO_CITY: 'SHIP_TO_CITY',
  SHIP_TO_STATE_ID: 'SHIP_TO_STATE_ID',
  SHIP_TO_ZIP_CODE: 'SHIP_TO_ZIP_CODE',
  SHIP_TO_COUNTRY_ID: 'SHIP_TO_COUNTRY_ID',
  WFE_CUSTOMER_ID: 'WFE_CUSTOMER_ID',
  BILL_TO_FIRST_NAME: 'BILL_TO_FIRST_NAME',
  BILL_TO_LAST_NAME: 'BILL_TO_LAST_NAME',
  BILL_TO_ADDRESS_1: 'BILL_TO_ADDRESS_1',
  BILL_TO_ADDRESS_2: 'BILL_TO_ADDRESS_2',
  BILL_TO_ADDRESS_3: 'BILL_TO_ADDRESS_3',
  BILL_TO_CITY: 'BILL_TO_CITY',
  BILL_TO_STATE_ID: 'BILL_TO_STATE_ID',
  BILL_TO_ZIP_CODE: 'BILL_TO_ZIP_CODE',
  BILL_TO_COUNTRY_ID: 'BILL_TO_COUNTRY_ID',
  BILL_TO_HOME_PHONE: 'BILL_TO_HOME_PHONE',
  EMAIL_ADDRESS: 'EMAIL_ADDRESS',
  CARRIER_ID: 'CARRIER_ID',
  RUSH_SHIPPING_IND: 'RUSH_SHIPPING_IND',
  SHIP_COMPLETE_IND: 'SHIP_COMPLETE_IND',
  SHIPPING_CHARGES_TOTAL: 'SHIPPING_CHARGES_TOTAL',
  TAX_TOTAL: 'TAX_TOTAL',
  TRANSACTION_TOTAL: 'TRANSACTION_TOTAL',
  POS_EQUIVALENCE: 'POS_EQUIVALENCE',
  ORDER_DATE: 'ORDER_DATE',
  ADDITIONAL_METADATA: 'ADDITIONAL_METADATA',
  SHIPPING_TAX1: 'SHIPPING_TAX1',
  SHIPPING_TAX1_DESCRIPTION: 'SHIPPING_TAX1_DESCRIPTION',
  SHIPPING_TAX2: 'SHIPPING_TAX2',
  SHIPPING_TAX2_DESCRIPTION: 'SHIPPING_TAX2_DESCRIPTION',
  SHIPPING_TAX3: 'SHIPPING_TAX3',
  SHIPPING_TAX3_DESCRIPTION: 'SHIPPING_TAX3_DESCRIPTION',
  DESTINATION_SITE_ID: 'DESTINATION_SITE_ID',
  REQUESTER_SITE_ID: 'REQUESTER_SITE_ID',
  SERVICE_TYPE: 'SERVICE_TYPE',
  LANGUAGE_NO: 'LANGUAGE_NO',
  FREE_RETURN_IND: 'FREE_RETURN_IND',
  SIGNATURE_REQUIRED_IND: 'SIGNATURE_REQUIRED_IND',
  RELEASED: 'RELEASED',
  GIFT_NOTE: 'GIFT_NOTE',
  LOYALTY_SESSION_ID: 'LOYALTY_SESSION_ID'
}

// We don't generate this array from the above enum because the order
// matters, and the order of the properties on JS objects isn't guaranteed.
// And we don't generate the enum from this array because my editor isn't smart
// enough to figure out how to do autocomplete unless you explicitly define the
// values of an object.
//
// Empty strings represent blank headers.
//
const HEADER_ROWS = [
  'RecordType H',
  'SITE_ID',
  'WFE_TRANS_ID',
  'SHIP_TO_FIRST_NAME',
  'SHIP_TO_LAST_NAME',
  '',
  'SHIP_TO_ADDRESS_1',
  'SHIP_TO_ADDRESS_2',
  'SHIP_TO_ADDRESS_3',
  'SHIP_TO_CITY',
  'SHIP_TO_STATE_ID',
  'SHIP_TO_ZIP_CODE',
  'SHIP_TO_COUNTRY_ID',
  'WFE_CUSTOMER_ID',
  'BILL_TO_FIRST_NAME',
  'BILL_TO_LAST_NAME',
  'BILL_TO_ADDRESS_1',
  'BILL_TO_ADDRESS_2',
  'BILL_TO_ADDRESS_3',
  'BILL_TO_CITY',
  'BILL_TO_STATE_ID',
  'BILL_TO_ZIP_CODE',
  'BILL_TO_COUNTRY_ID',
  'BILL_TO_HOME_PHONE',
  'EMAIL_ADDRESS',
  'CARRIER_ID',
  'RUSH_SHIPPING_IND',
  'SHIP_COMPLETE_IND',
  '',
  'SHIPPING_CHARGES_TOTAL',
  'TAX_TOTAL',
  '',
  'TRANSACTION_TOTAL',
  '',
  'POS_EQUIVALENCE',
  '',
  '',
  '',
  '',
  'ORDER_DATE',
  'ADDITIONAL_METADATA',
  'SHIPPING_TAX1',
  'SHIPPING_TAX1_DESCRIPTION',
  'SHIPPING_TAX2',
  'SHIPPING_TAX2_DESCRIPTION',
  'SHIPPING_TAX3',
  'SHIPPING_TAX3_DESCRIPTION',
  'DESTINATION_SITE_ID',
  'REQUESTER_SITE_ID',
  '',
  '',
  'SERVICE_TYPE',
  'LANGUAGE_NO',
  'FREE_RETURN_IND',
  'SIGNATURE_REQUIRED_IND',
  'RELEASED',
  'GIFT_NOTE',
  'LOYALTY_SESSION_ID'
]

const DETAILS_ROWS_ENUM = {
  RECORD_TYPE: 'RecordType D',
  SITE_ID: 'SITE_ID',
  LINE: 'LINE',
  WFE_TRANS_ID: 'WFE_TRANS_ID',
  QTY_ORDERED: 'QTY_ORDERED',
  UNIT_PRICE: 'UNIT_PRICE',
  EXTENSION_AMOUNT: 'EXTENSION_AMOUNT',
  LINE_SHIPPING_CHARGES: 'LINE_SHIPPING_CHARGES',
  LINE_TOTAL_TAX: 'LINE_TOTAL_TAX',
  LINE_TOTAL_AMOUNT: 'LINE_TOTAL_AMOUNT',
  BAR_CODE_ID: 'BAR_CODE_ID',
  ENDLESS_AISLE_IND: 'ENDLESS_AISLE_IND',
  EXT_REF_ID: 'EXT_REF_ID',
  GIFT_WRAP_IND: 'GIFT_WRAP_IND',
  SALESPERSON_ID: 'SALESPERSON_ID',
  ADDITIONAL_METADATA: 'ADDITIONAL_METADATA',
  SUB_TYPE: 'SUB_TYPE',
  ITEM_IDENTIFIER: 'ITEM_IDENTIFIER'
}

const DETAILS_ROWS = [
  'RecordType D',
  'SITE_ID',
  'LINE',
  'WFE_TRANS_ID',
  '',
  '',
  '',
  'QTY_ORDERED',
  'UNIT_PRICE',
  '',
  'EXTENSION_AMOUNT',
  'LINE_SHIPPING_CHARGES',
  'LINE_TOTAL_TAX',
  'LINE_TOTAL_AMOUNT',
  'BAR_CODE_ID',
  'ENDLESS_AISLE_IND',
  'EXT_REF_ID',
  'GIFT_WRAP_IND',
  '',
  '',
  'SALESPERSON_ID',
  'ADDITIONAL_METADATA',
  'SUB_TYPE',
  'ITEM_IDENTIFIER'
]

const TAXES_ROWS_ENUM = {
  RECORD_TYPE: 'RecordType T',
  SITE_ID: 'SITE_ID',
  LINE: 'LINE',
  WFE_TRANS_ID: 'WFE_TRANS_ID',
  SEQUENCE: 'SEQUENCE',
  MERCHANDISE_TAX_AMOUNT: 'MERCHANDISE_TAX_AMOUNT',
  MERCHANDISE_TAX_DESC: 'MERCHANDISE_TAX_DESC'
}

const TAXES_ROWS = [
  'RecordType T',
  'SITE_ID',
  'LINE',
  'WFE_TRANS_ID',
  'SEQUENCE',
  'MERCHANDISE_TAX_AMOUNT',
  'MERCHANDISE_TAX_DESC'
]

const TENDER_ROWS_ENUM = {
  RECORD_TYPE: 'RecordType N',
  SITE_ID: 'SITE_ID',
  LINE: 'LINE',
  WFE_TRANS_ID: 'WFE_TRANS_ID',
  AMOUNT: 'AMOUNT',
  POS_EQUIVALENCE: 'POS_EQUIVALENCE',
  REFERENCENO: 'REFERENCENO',
  EXPDATE: 'EXPDATE',
  CARD_NO: 'CARD_NO',
  AUTHORIZATION_NO: 'AUTHORIZATION_NO'
}

const TENDER_ROWS = [
  'RecordType N',
  'SITE_ID',
  'LINE',
  'WFE_TRANS_ID',
  'AMOUNT',
  'POS_EQUIVALENCE',
  'REFERENCENO',
  'EXPDATE',
  '',
  'CARD_NO',
  'AUTHORIZATION_NO'
]

const MISC_ROWS = [
  'RecordType M',
  'SITE_ID',
  'LINE',
  'WFE_TRANS_ID',
  'SEQUENCE',
  'AMOUNT',
  'REASON_ID',
  'MISC_TAX_AMOUNT1',
  'MISC_TAX_DESC1',
  'MISC_TAX_AMOUNT2',
  'MISC_TAX_DESC2'
]

const GENERAL_CSV_OPTIONS = {
  header: false,
  quote: '"',
  escapedQuote: '""',
  eol: '\r\n' // The CSVs will be processed by a Windows machine
}

const SENT_TO_OMS_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const UPDATE_TO_OMS_STATUSES = {
  SUCCESS: 'SUCCESS',
  FAILURE: 'FAILURE',
  PENDING: 'PENDING'
}

const SEND_ORDER_RETRY_LIMIT = 5
const SEND_ORDER_UPDATE_RETRY_LIMIT = 5

const SENT_TO_ALGOLIA_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const SENT_TO_CJ_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const SENT_TO_DYNAMIC_YIELD_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const SENT_TO_NARVAR_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const SENT_TO_BOLD_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const NARVAR_MONIKERS = {
  990: '990',
  997: '997',
}

const SENT_TO_CRM_STATUS = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

const SENT_TO_SEGMENT_STATUSES = {
  SUCCESS: 'SUCCESS',
  PENDING: 'PENDING',
  FAILURE: 'FAILURE'
}

// From CRM's documentation: "Determines the Division context of the email
// (i.e. Canada Stores or Outlet Stores).  This may also be used to help select
// the correct template when Division specific templates exist."
const EMAIL_API_OWNER_ID = 'F6UJ9A000002' // Division 01 (Canada)

// ms
const FETCH_ABORT_TIMEOUT = 120 * 1000

const SHIPPING_SERVICE_TYPES = {
  EXPRESS: 'EXPRESS',
  SHIPMENT: 'SHIPMENT',
  GROUND: 'GROUND',
  EXPEDITED_PARCEL: 'EXPEDITED PARCEL',
  XPRESSPOST: 'XPRESSPOST',
  ECONOMY: 'ECONOMY',
  STANDARD_OVERNIGHT: 'OVERNIGHT'
}

const SHIPPING_SERVICE_TYPES_TO_NAMES = {
  [SHIPPING_SERVICE_TYPES.EXPRESS]: 'Priority Overnight',
  [SHIPPING_SERVICE_TYPES.SHIPMENT]: 'Shipment',
  [SHIPPING_SERVICE_TYPES.GROUND]: 'Ground',
  [SHIPPING_SERVICE_TYPES.EXPEDITED_PARCEL]: 'Expedited',
  [SHIPPING_SERVICE_TYPES.XPRESSPOST]: 'XpressPost',
  [SHIPPING_SERVICE_TYPES.ECONOMY]: 'Economy',
  [SHIPPING_SERVICE_TYPES.STANDARD_OVERNIGHT]: 'Standard Overnight'
}

const CARRIER_IDS = {
  CP: 'CP',
  FDX: 'FDX',
  PRL: 'PRL',
  DHL: 'DHL',
  USPS: 'USPS',
  UPS: 'UPS'
}

const CARRIER_IDS_TO_NAMES = {
  [CARRIER_IDS.CP]: 'Canada Post',
  [CARRIER_IDS.FDX]: 'FedEx',
  [CARRIER_IDS.PRL]: 'Purolator',
  [CARRIER_IDS.DHL]: 'DHL',
  [CARRIER_IDS.USPS]: 'USPS',
  [CARRIER_IDS.UPS]: 'UPS'
}

const ENDLESS_AISLE_SHIPPING_NAMES = {
  STANDARD: 'Standard',
  EXPEDITED: 'Expedited',
  NEXT_DAY: 'Next Day'
}

const ENDLESS_AISLE_SHIPPING_NAMES_TO_CARRIER_IDS = {
  [ENDLESS_AISLE_SHIPPING_NAMES.STANDARD]: ENABLE_CANADA_POST_CARRIER ? CARRIER_IDS.CP : CARRIER_IDS.FDX,
  [ENDLESS_AISLE_SHIPPING_NAMES.EXPEDITED]: CARRIER_IDS.FDX,
  [ENDLESS_AISLE_SHIPPING_NAMES.NEXT_DAY]: CARRIER_IDS.FDX
}

const ENDLESS_AISLE_SHIPPING_NAMES_TO_SHIPPING_SERVICE_TYPES = {
  [ENDLESS_AISLE_SHIPPING_NAMES.STANDARD]: ENABLE_CANADA_POST_CARRIER ? SHIPPING_SERVICE_TYPES.EXPEDITED_PARCEL : SHIPPING_SERVICE_TYPES.ECONOMY,
  [ENDLESS_AISLE_SHIPPING_NAMES.EXPEDITED]: SHIPPING_SERVICE_TYPES.ECONOMY,
  [ENDLESS_AISLE_SHIPPING_NAMES.NEXT_DAY]: SHIPPING_SERVICE_TYPES.STANDARD_OVERNIGHT
}

const PAYMENT_STATES = {
  CANCELLED: 'cancelled',
  DISPUTED: 'disputed',
  PAID: 'paid',
  PARTIALLY_PAID: 'partially_paid',
  PARTIALLY_REFUNDED: 'partially_refunded',
  PENDING: 'pending',
  PREAUTHED: 'preauthed',
  REFUNDED: 'refunded',
  HELD_FOR_REVIEW: 'held_for_review',
  CAPTURED: 'captured'
}

const TRANSACTION_TYPES = {
  AUTHORIZATION: 'Authorization',
  CHARGE: 'Charge',
  CANCEL_AUTHORIZATION: 'CancelAuthorization',
  REFUND: 'Refund',
  CHARGE_BACK: 'Chargeback'
}

const TRANSACTION_STATES = {
  SUCCESS: 'Success',
  PENDING: 'Pending',
  INITIAL: 'Initial',
  FAILURE: 'Failure'
}

const JESTA_ORDER_STATUSES = {
  RELEASED: 'UnholdSalesOrder',
  CANCELLED: 'CancelSalesOrder'
}

const STATUS_FIELDS_TO_AVAILABLE_STATUSES = {
  [ORDER_CUSTOM_FIELDS.SENT_TO_OMS_STATUS]: SENT_TO_OMS_STATUSES,
  [ORDER_CUSTOM_FIELDS.OMS_UPDATE_STATUS]: UPDATE_TO_OMS_STATUSES,
  [ORDER_CUSTOM_FIELDS.ALGOLIA_CONVERSION_STATUS]: SENT_TO_ALGOLIA_STATUSES,
  [ORDER_CUSTOM_FIELDS.DYNAMIC_YIELD_PURCHASE_STATUS]: SENT_TO_DYNAMIC_YIELD_STATUSES,
  [ORDER_CUSTOM_FIELDS.NARVAR_STATUS]: SENT_TO_NARVAR_STATUSES,
  [ORDER_CUSTOM_FIELDS.SEGMENT_STATUS]: SENT_TO_SEGMENT_STATUSES,
  [ORDER_CUSTOM_FIELDS.BOLD_STATUS]: SENT_TO_BOLD_STATUSES
}

const ALGOLIA_INSIGHTS_URL = 'https://insights.algolia.io'

module.exports = {
  ALGOLIA_INSIGHTS_URL,
  JESTA_ORDER_STATUSES,
  PAYMENT_STATES,
  TRANSACTION_TYPES,
  TRANSACTION_STATES,
  BACKOFF,
  CARD_TYPES_TO_JESTA_CODES,
  CITCON_PAYMENT_METHODS,
  CARRIER_IDS,
  CARRIER_IDS_TO_NAMES,
  DEFAULT_STALE_ORDER_CUTOFF_TIME_MS,
  DETAILS_ROWS,
  DETAILS_ROWS_ENUM,
  EMAIL_API_OWNER_ID,
  FETCH_ABORT_TIMEOUT,
  GENERAL_CSV_OPTIONS,
  JESTA_TAX_DESCRIPTIONS,
  LOCALES_TO_JESTA_LANGUAGE_NUMBERS,
  HEADER_ROWS,
  HEADER_ROWS_ENUM,
  KEEP_ALIVE_INTERVAL,
  MISC_ROWS,
  ONLINE_SITE_ID,
  SEND_ORDER_RETRY_LIMIT,
  SEND_ORDER_UPDATE_RETRY_LIMIT,
  SENT_TO_OMS_STATUSES,
  UPDATE_TO_OMS_STATUSES,
  SENT_TO_ALGOLIA_STATUSES,
  SENT_TO_CJ_STATUSES,
  SENT_TO_CRM_STATUS,
  SENT_TO_DYNAMIC_YIELD_STATUSES,
  SENT_TO_NARVAR_STATUSES,
  SENT_TO_BOLD_STATUSES,
  NARVAR_MONIKERS,
  SENT_TO_SEGMENT_STATUSES,
  SHIPPING_SERVICE_TYPES,
  SHIPPING_SERVICE_TYPES_TO_NAMES,
  TAXES_ROWS,
  TAXES_ROWS_ENUM,
  TENDER_ROWS,
  TENDER_ROWS_ENUM,
  JOB_TASK_TIMEOUT,
  MAXIMUM_RETRIES,
  ORDER_CUSTOM_FIELDS,
  ORDER_UPDATE_BACKOFF,
  STATUS_FIELDS_TO_AVAILABLE_STATUSES,
  ENDLESS_AISLE_SHIPPING_NAMES_TO_CARRIER_IDS,
  ENDLESS_AISLE_SHIPPING_NAMES_TO_SHIPPING_SERVICE_TYPES
}